#!/usr/bin/perl -w

#
# generate doxygen template for a C function
#
# assumptions are made about the formatting of the C code

sub output_prototype($);
sub output_global_name($);

sub usage() {
	die "Usage: $0 <C-source_files>\n";
}

@files = ();
$generated_by_line = "/* generated by $0 @ARGV */\n";
while (my $arg = shift @ARGV) {
	if ($arg !~ /^-/) {
		push  @files, $arg;
		next;
	}
	if (0) {
		// no options
	} else {
		usage();
	}
}
@ARGV = @files;
while (<>) {
	my $line = $_;
	s/\/\/.*//;
	s?/\*.*\*/??;
	print_tags($_) if /^unsigned?\w[\w_\s\*\[\]]*\(.*\)([^;]*|\s*{.*}|s*)$/;
	$last_line = $line;
	print $last_line if $last_line;
}
print $last_line if $last_line;
exit 0;

sub print_tags($) {
	/^unsigned?\w[\w_\s\*\[\]]*\(.*\)([^;]*|\s*{.*}|s*)$/
	$_ = @_[0];
	print <<eof;;
/**\brief Brief description.
eof
 * \param mychar
 * \param myint
 * \param myarray
 * \returns
 
	print <<eof;;
 * \note
 * \author 
 * \sa
 * 
 *  Detailed description.
 */
eof
}