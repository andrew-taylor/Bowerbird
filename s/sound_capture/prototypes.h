/* generated by /home/andrewt/bin/prototypes sound_capture.c alsa.c ts7200.c option.c util.c sunrise.c */

/* sound_capture.c */

extern char *version ;
void initialize_options(void);
void run(void);
void write_data(int16_t *buffer, int n_channels, int n_frames, int sampling_rate, char *pathname, char *details_pathname, time_t seconds, uint32_t microseconds);
void set_16bit_WAV_header(char *h, int frames, int channels, int frequency);
void intcpy(char *b, int i);
void shortcpy(char *b, int i);

/* alsa.c */

void alsa_close(void);
int alsa_readi(int16_t *data, int n_frames);
void do_alsa_init(void);
int alsa_init(void);
void alsa_info(void);

/* ts7200.c */

#ifdef TS7200
void ts7200_watchdog_set(uint8_t value);
void ts7200_watchdog_feed(void);
double ts7200_temperature(void);
void ts7200_gpio(action_t action, int gpio, int bit, uint32_t value);
void ts7200_pulse(unsigned long pulse_milliseconds, int gpio, int bit, uint32_t value);
#endif
void beep(int n_beeps, int beep_msec, int inter_beep_msec);
void msleep(int milliseconds);

/* option.c */

int hash(char *s);
void set_option(char *name, char *value);
void set_option_double(char *name, double d);
void set_option_int(char *name, int i);
void set_option_boolean(char *name, int i);
char *get_option(char *name);
int defined_option(char *name);
double get_option_double(char *name);
int get_option_int(char *name);
int get_option_boolean(char *name);
int get_option_keyword(char *name, char **keyword_table);
void parse_option_assignment(char *assignment);
int lookup_keyword(char *w, char **keyword_table);

/* util.c */

extern char *myname;
void set_myname(char *argv[]);
void die(char *format, ...) __attribute__ ((noreturn)) ;
#ifndef __GNUC__
#define __attribute__()
#endif
void *salloc(size_t n) __attribute__ ((malloc));
#ifndef __GNUC__
#define __attribute__()
#endif
void *srealloc(void *m, size_t n) __attribute__ ((malloc));
#ifndef __GNUC__
#define __attribute__()
#endif
char *sstrdup(char *s) __attribute__ ((malloc));
#ifndef __GNUC__
#define __attribute__()
#endif
void *sdup(void *old, size_t n) __attribute__ ((malloc));
extern int		verbosity ;
extern FILE	*debug_stream;
#ifndef __GNUC__
#define __attribute__()
#endif
void dprintf(int level, char *format, ...) __attribute__ ((format (printf, 2, 3)));
#ifndef __GNUC__
#define __attribute__()
#endif
void dprintf_file_line_func(int level, char *file_name, int line_number, const char *function_name, char *format, ...) __attribute__ ((format (printf, 5, 6)));

/* sunrise.c */

int calculate_monitoring_priority(time_t t);
int calculate_monitoring_priority1(int delta_minutes_sunrise, int delta_minutes_sunset);
